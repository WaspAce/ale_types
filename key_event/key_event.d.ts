/**
 * Class representing keyboard event information.
 */
declare class KeyEvent {
    /**
     * The type of keyboard event.
     */
    event_type: KeyEventType;

    /**
     * Array describing any pressed modifier keys. See
     * [[EventFlags]] for values.
     */
    modifiers: EventFlags[];

    /**
     * The Windows key code for the key event. This value is used by the DOM
     * specification. Sometimes it comes directly from the event (i.e. on
     * Windows) and sometimes it's determined using a mapping function. See
     * https://chromium.googlesource.com/external/Webkit/+/safari-4-branch/WebCore/platform/KeyboardCodes.h for the list of values.
     */
    windows_key_code: number;

    /**
     * The actual key code genenerated by the platform.
     */
    native_key_code: number;

    /**
     * Indicates whether the event is considered a "system key" event (see
     * http://msdn.microsoft.com/en-us/library/ms646286(VS.85).aspx for details).
     * This value will always be false on non-Windows platforms.
     */
    is_system_key: boolean;

    /**
     * The character generated by the keystroke.
     */
    character: string;

    /**
     * Same as |character| but unmodified by any concurrently-held modifiers
     * (except shift). This is useful for working out shortcut keys.
     */
    unmodified_character: string;

    /**
     * true if the focus is currently on an editable field on the page. This is
     * useful for determining if standard key events should be intercepted.
     */
    focus_on_editable_field: boolean;
}